generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid()) @db.Uuid
  name            String?
  username        String?        @unique
  bio             String?
  email           String?        @unique
  emailVerified   DateTime?
  image           String?
  coverImage      String?
  profileImage    String?
  hashedPassword  String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  followingIds    String[]       @db.Uuid
  hasNotification Boolean?
  posts           Post[]
  comments        Comment[]
  notifications   Notification[]
}

model Post {
  id        String   @id @default(uuid()) @db.Uuid
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.Uuid
  likedIds  String[] @db.Uuid

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments Comment[]
}

model Comment {
  id        String   @id @default(uuid()) @db.Uuid
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.Uuid
  postId    String   @db.Uuid

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification {
  id        String   @id @default(uuid()) @db.Uuid
  body      String
  userId    String   @db.Uuid
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
